# üè¢ GENIUS INDUSTRIES - Docker Compose Unificado
# Solo 2 servicios: PostgreSQL + Backend+Frontend

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: genius-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: KhloeMF0911$
      POSTGRES_DB: genius_dev
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - genius-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d genius_dev"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend + Frontend Unificado
  app:
    build:
      context: .
      dockerfile: Dockerfile.unified
    container_name: genius-app
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "3000:3000"  # Puerto para desarrollo del frontend
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules  # Evitar sobrescribir node_modules
      - ./backend/app:/app/backend/app  # Montar el backend para desarrollo
    environment:
      # Database
      - DATABASE_URL=postgresql://postgres:KhloeMF0911$$@postgres:5432/genius_dev
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=genius_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=KhloeMF0911$$
      
      # Clerk Auth
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - CLERK_PUBLISHABLE_KEY=${CLERK_PUBLISHABLE_KEY}
      - CLERK_WEBHOOK_SECRET=${CLERK_WEBHOOK_SECRET}
      
      # Application
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - PROJECT_NAME=Genius Industries
      - API_V1_STR=/api/v1
      - STACK_NAME=genius-industries
      - VERSION=1.0.0
      
      # Domain & CORS
      - DOMAIN=${DOMAIN:-localhost}
      - FRONTEND_HOST=http://localhost:8000
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - BACKEND_CORS_ORIGINS=http://localhost:8000,http://localhost:3000,http://localhost:5173
      
      # Features
      - ENABLE_DOCS=true
      - ENABLE_TEST_ROUTE=true
      - LOG_LEVEL=DEBUG
      
      # Storage
      - STORAGE_BUCKET=genius-storage-dev
      
      # Docker Images (requeridos por la configuraci√≥n)
      - DOCKER_IMAGE_BACKEND=genius-backend-unified
      - DOCKER_IMAGE_FRONTEND=genius-frontend-unified
      
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - genius-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  genius-network:
    driver: bridge
    name: genius-network 