[project]
name = "app"
version = "0.1.0"
description = "Backend API for AI Soul Entity"
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi>=0.100.0",
    "uvicorn>=0.22.0",
    "sqlmodel>=0.0.8",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "emails>=0.6",
    "psycopg>=3.1.18",
    "alembic>=1.11.1",
    "tenacity>=8.2.2",
    "pydantic[email]>=2.0.0",
    "openai>=1.0.0",
    "PyPDF2>=3.0.0",
    "chromadb>=0.4.22",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "jinja2<4.0.0,>=3.1.4",
    "httpx>=0.24.1",
    "bcrypt==4.3.0",
    "pydantic-settings<3.0.0,>=2.2.1",
    "sentry-sdk[fastapi]<2.0.0,>=1.40.6",
    "pyjwt<3.0.0,>=2.8.0",
    "langchain<1.0.0,>=0.2.0",
    "langchain-openai<1.0.0,>=0.1.0",
    "tiktoken<1.0.0,>=0.7.0",
    # Enhanced RAG System Dependencies
    "qdrant-client>=1.7.0",
    "sentence-transformers>=2.2.2",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "nltk>=3.8.0",
    "spacy>=3.6.0",
    "redis>=4.5.0",
    "aioredis>=2.0.0",
    "python-docx>=0.8.11",
    "python-pptx>=0.6.21",
    "openpyxl>=3.1.0",
    "markdown>=3.4.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "pymupdf>=1.23.0", # Better PDF processing
    "textstat>=0.7.0", # Text readability metrics
    "langdetect>=1.0.9", # Language detection
    "python-magic>=0.4.27", # File type detection
    "celery>=5.3.0", # Background task processing
    "flower>=2.0.0", # Celery monitoring
    "psutil>=5.9.0", # System and process utilities
]

[project.urls]
Homepage = "https://github.com/yourusername/ai-soul-entity"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["app"]
include = [
    "app/**/*.py",
    "app/**/*.ini",
    "app/**/*.json",
    "app/**/*.mjml",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "httpx>=0.24.1",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.4.1",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=7.4.0",
    "httpx>=0.24.1",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.4.1",
]
