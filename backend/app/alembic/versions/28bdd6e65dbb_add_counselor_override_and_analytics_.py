"""add_counselor_override_and_analytics_system

Revision ID: 28bdd6e65dbb
Revises: 6f83bac06955
Create Date: 2025-07-09 07:59:06.326213

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '28bdd6e65dbb'
down_revision = '6f83bac06955'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('domain', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('max_users', sa.Integer(), nullable=False),
    sa.Column('max_ai_souls', sa.Integer(), nullable=False),
    sa.Column('settings', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('domain')
    )
    op.create_table('dailyusagemetrics',
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('total_conversations', sa.Integer(), nullable=False),
    sa.Column('total_messages', sa.Integer(), nullable=False),
    sa.Column('unique_users', sa.Integer(), nullable=False),
    sa.Column('ai_responses_generated', sa.Integer(), nullable=False),
    sa.Column('counselor_interventions', sa.Integer(), nullable=False),
    sa.Column('high_risk_conversations', sa.Integer(), nullable=False),
    sa.Column('average_response_time_ms', sa.Float(), nullable=True),
    sa.Column('user_satisfaction_average', sa.Float(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dailyusagemetrics_date'), 'dailyusagemetrics', ['date'], unique=False)
    op.create_table('counselor',
    sa.Column('specializations', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('license_number', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('license_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('max_concurrent_cases', sa.Integer(), nullable=False),
    sa.Column('notification_preferences', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contentfilteranalytics',
    sa.Column('filter_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('content_sample', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('severity_level', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('action_taken', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('false_positive', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('ai_soul_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ai_soul_id'], ['aisoulentity.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversationanalytics',
    sa.Column('conversation_duration_seconds', sa.Integer(), nullable=True),
    sa.Column('message_count', sa.Integer(), nullable=False),
    sa.Column('ai_response_count', sa.Integer(), nullable=False),
    sa.Column('risk_assessments_triggered', sa.Integer(), nullable=False),
    sa.Column('counselor_interventions', sa.Integer(), nullable=False),
    sa.Column('user_satisfaction_score', sa.Float(), nullable=True),
    sa.Column('topic_categories', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('ai_soul_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('session_start', sa.DateTime(), nullable=False),
    sa.Column('session_end', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ai_soul_id'], ['aisoulentity.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('counselorperformance',
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('cases_reviewed', sa.Integer(), nullable=False),
    sa.Column('average_review_time_seconds', sa.Float(), nullable=True),
    sa.Column('approvals', sa.Integer(), nullable=False),
    sa.Column('modifications', sa.Integer(), nullable=False),
    sa.Column('rejections', sa.Integer(), nullable=False),
    sa.Column('escalations', sa.Integer(), nullable=False),
    sa.Column('user_feedback_score', sa.Float(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('counselor_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['counselor_id'], ['counselor.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_counselorperformance_date'), 'counselorperformance', ['date'], unique=False)
    op.create_table('riskassessment',
    sa.Column('risk_level', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('risk_categories', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('reasoning', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('requires_human_review', sa.Boolean(), nullable=False),
    sa.Column('auto_response_blocked', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('chat_message_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('ai_soul_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('assessed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ai_soul_id'], ['aisoulentity.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['chat_message_id'], ['chatmessage.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pendingresponse',
    sa.Column('original_user_message', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=False),
    sa.Column('ai_generated_response', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('priority', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('counselor_notes', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('modified_response', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('response_time_limit', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('chat_message_id', sa.Uuid(), nullable=False),
    sa.Column('risk_assessment_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('ai_soul_id', sa.Uuid(), nullable=False),
    sa.Column('assigned_counselor_id', sa.Uuid(), nullable=True),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ai_soul_id'], ['aisoulentity.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['assigned_counselor_id'], ['counselor.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['chat_message_id'], ['chatmessage.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['risk_assessment_id'], ['riskassessment.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('counseloraction',
    sa.Column('action_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('original_response', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('final_response', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('time_taken_seconds', sa.Integer(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('counselor_id', sa.Uuid(), nullable=False),
    sa.Column('pending_response_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['counselor_id'], ['counselor.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pending_response_id'], ['pendingresponse.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # Add role column with default value first
    op.add_column('user', sa.Column('role', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True))
    
    # Update existing users to have 'user' role
    op.execute("UPDATE \"user\" SET role = 'user' WHERE role IS NULL")
    
    # Make role column non-nullable
    op.alter_column('user', 'role', nullable=False)
    
    op.add_column('user', sa.Column('organization_id', sa.Uuid(), nullable=True))
    op.create_foreign_key(None, 'user', 'organization', ['organization_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_column('user', 'organization_id')
    op.drop_column('user', 'role')
    op.drop_table('counseloraction')
    op.drop_table('pendingresponse')
    op.drop_table('riskassessment')
    op.drop_index(op.f('ix_counselorperformance_date'), table_name='counselorperformance')
    op.drop_table('counselorperformance')
    op.drop_table('conversationanalytics')
    op.drop_table('contentfilteranalytics')
    op.drop_table('counselor')
    op.drop_index(op.f('ix_dailyusagemetrics_date'), table_name='dailyusagemetrics')
    op.drop_table('dailyusagemetrics')
    op.drop_table('organization')
    # ### end Alembic commands ###
