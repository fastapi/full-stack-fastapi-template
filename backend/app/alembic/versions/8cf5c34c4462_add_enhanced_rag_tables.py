"""add_enhanced_rag_tables

Revision ID: 8cf5c34c4462
Revises: b716a9118488
Create Date: 2025-07-06 16:06:07.450512

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '8cf5c34c4462'
down_revision = 'b716a9118488'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_chunk_enhanced',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('document_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('chunk_metadata', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('semantic_metadata', sqlmodel.sql.sqltypes.AutoString(length=3000), nullable=True),
    sa.Column('embedding_model', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('embedding_dimension', sa.Integer(), nullable=False),
    sa.Column('search_count', sa.Integer(), nullable=False),
    sa.Column('click_count', sa.Integer(), nullable=False),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_processing_log',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('document_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('processing_stage', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('chunks_created', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('embedding_cost', sa.Float(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rag_configuration',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('ai_soul_id', sa.Uuid(), nullable=True),
    sa.Column('chunking_strategy', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('chunk_size', sa.Integer(), nullable=False),
    sa.Column('chunk_overlap', sa.Integer(), nullable=False),
    sa.Column('embedding_model', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('search_algorithm', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('similarity_threshold', sa.Float(), nullable=False),
    sa.Column('max_results', sa.Integer(), nullable=False),
    sa.Column('enable_reranking', sa.Boolean(), nullable=False),
    sa.Column('advanced_settings', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ai_soul_id'], ['aisoulentity.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('searchquery',
    sa.Column('query_text', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('ai_soul_id', sa.Uuid(), nullable=True),
    sa.Column('filters_applied', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('results_count', sa.Integer(), nullable=False),
    sa.Column('response_time_ms', sa.Integer(), nullable=False),
    sa.Column('user_clicked_result', sa.Boolean(), nullable=False),
    sa.Column('relevance_feedback', sa.Float(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ai_soul_id'], ['aisoulentity.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('search_result_click',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('search_query_id', sa.Uuid(), nullable=False),
    sa.Column('chunk_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('result_position', sa.Integer(), nullable=False),
    sa.Column('similarity_score', sa.Float(), nullable=False),
    sa.Column('rerank_score', sa.Float(), nullable=True),
    sa.Column('time_spent_ms', sa.Integer(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('clicked_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['chunk_id'], ['document_chunk_enhanced.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['search_query_id'], ['searchquery.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('training_document_chunk_enhanced',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('training_document_id', sa.Uuid(), nullable=False),
    sa.Column('ai_soul_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(length=4000), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('chunk_metadata', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('semantic_metadata', sqlmodel.sql.sqltypes.AutoString(length=3000), nullable=True),
    sa.Column('embedding_model', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('embedding_dimension', sa.Integer(), nullable=False),
    sa.Column('training_importance', sa.Float(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ai_soul_id'], ['aisoulentity.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['training_document_id'], ['trainingdocument.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('training_document_chunk_enhanced')
    op.drop_table('search_result_click')
    op.drop_table('searchquery')
    op.drop_table('rag_configuration')
    op.drop_table('document_processing_log')
    op.drop_table('document_chunk_enhanced')
    # ### end Alembic commands ###
